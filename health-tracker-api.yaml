openapi: 3.0.0
info:
  version: 0.0.1
  title: HealthTracker-Api
  description: This Api provides CRUD operations on the HealthTracker APP
  contact:
    name: Britty Abraham
    email: w20105650@mail.wit.ie
paths:
  /api/users:
    get:
      responses:
        200:
          description: This will output the list of users in the App
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      description: Add a user to the app
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        200:
          description: The user has been created
  /api/users/{user_id}:
    get:
      parameters:
        - $ref: '#/components/parameters/UserIdPath'
      responses:
        200:
          description: List a user with a specific user-id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    patch:
      parameters:
        - $ref: '#/components/parameters/UserIdPath'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        200:
          description: Update the user-data with given user-id
    delete:
      parameters:
        - $ref: '#/components/parameters/UserIdPath'
      responses:
        200:
          description: Delete the user with the given user-id
  /api/users/{user_id}/activities:
    get:
      parameters:
        - $ref: '#/components/parameters/UserIdPath'
      responses:
        200:
          description: List activities of a specific user-id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
  /api/users/email/{user_email}:
    get:
      parameters:
        - $ref: '#/components/parameters/UserEmailPath'
      responses:
        200:
          description: List a user with a specific user-email
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /api/activities:
    get:
      responses:
        200:
          description: List all activities
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
    post:
      description: Add an activity to the app
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activity'
      responses:
        200:
          description: The activity has been created
  /api/activities/{activity-id}:
    get:
      parameters:
        - $ref: '#/components/parameters/ActivityId'
      responses:
        200:
          description: List an activity with Id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
    patch:
      parameters:
        - $ref: '#/components/parameters/ActivityId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activity'
      responses:
        200:
          description: The activity has been updated
    delete:
      parameters:
        - $ref: '#/components/parameters/ActivityId'
      responses:
        200:
          description: The Activity is deleted
  /api/bmi:
    post:
      description: Add a BMI calculated for a user to the app
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bmireq'
      responses:
        200:
          description: The BMI has been Calculated and saved
  /api/bmi/{user-id}:
    get:
      parameters:
        - $ref: '#/components/parameters/UserIdPath'
      responses:
        200:
          description: List all bmi calculated for a specific user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bmi'
    patch:
      parameters:
        - $ref: '#/components/parameters/BmiId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bmi'
      responses:
        200:
          description: The BMI has been updated
    delete:
      parameters:
        - $ref: '#/components/parameters/BmiId'
      responses:
        200:
          description: The Bmi is deleted
  /api/waterintake:
    post:
      description: Add a waterintake for a user to the app
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/waterintakereq'
      responses:
        200:
          description: The waterintake has been created and saved
  /api/waterintake/{user-id}:
    get:
      parameters:
        - $ref: '#/components/parameters/UserIdPath'
      responses:
        200:
          description: List all the waterintake for a specific user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Waterintake'
    patch:
      parameters:
        - $ref: '#/components/parameters/WaterintakeId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Waterintake'
      responses:
        200:
          description: The Waterintake has been updated
    delete:
      parameters:
        - $ref: '#/components/parameters/WaterintakeId'
      responses:
        200:
          description: The Waterintake is deleted
  /api/goal:
    post:
      description: Add a goal  for a user to the app
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/goalreq'
      responses:
        200:
          description: The goal has been created and saved
  /api/goal/{user-id}:
    get:
      parameters:
        - $ref: '#/components/parameters/UserIdPath'
      responses:
        200:
          description: List all the goals for a specific user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Goal'
    patch:
      parameters:
        - $ref: '#/components/parameters/GoalId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Goal'
      responses:
        200:
          description: The Goal has been updated
    delete:
      parameters:
        - $ref: '#/components/parameters/GoalId'
      responses:
        200:
          description: The goal is deleted

components:
  parameters:
    UserIdPath:
      in: path
      name: user_id
      description: User id path parameter
      required: true
      schema:
        type: integer
        example: 3232
    UserEmailPath:
      in: path
      name: user_email
      description: User email path parameter
      required: true
      schema:
        type: string
        example: abc@xyz.com
    ActivityId:
      in: path
      name: activity-id
      description: Activity id path parameter
      required: true
      schema:
        type: integer
        example: 24
    BmiId:
      in: path
      name: bmi-id
      description: Bmi id path parameter
      required: true
      schema:
        type: integer
        example: 24
    WaterintakeId:
      in: path
      name: waterintake-id
      description: waterintake id path parameter
      required: true
      schema:
        type: integer
        example: 12
    GoalId:
      in: path
      name: goal-id
      description: goal id path parameter
      required: true
      schema:
        type: integer
        example: 12
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          example: 3232
        name:
          type: string
          example: Jins Mathew
        email:
          type: string
          example: jins@mathew.com
    Activity:
      type: object
      properties:
        id:
          type: integer
          example: 12
        description:
          type: string
          example: Running
        duration:
          type: decimal
          example: 13.5
        calories:
          type: integer
          example: 123
        started:
          type: timestamp
          example: 2020-06-10 05:59:27
    Bmireq:
      type: object
      properties:
        id:
          type: integer
          example: 12
        weight:
          type: decimal
          example: 56.2
        height:
          type: decimal
          example: 160
        user-id:
          type: integer
          example: 05
    Bmi:
      type: object
      properties:
        id:
          type: integer
          example: 12
        weight:
          type: decimal
          example: 56.2
        height:
          type: decimal
          example: 160
        bmival:
          type: decimal
          example: 22.3
        bmiresult:
          type: string
          example: Healthy
        createdat:
          type: timestamp
          example: 2020-06-10 05:59:27
    goalreq:
      type: object
      properties:
        id:
          type: integer
          example: 12
        goal_category:
          type: string
          example: bmi
        description:
          type: string
          example: Do more exercises
        user-id:
          type: integer
          example: 05
        createdat:
          type: datetime
          example: 2020-06-10 05:59:27 +0000
    Goal:
      type: object
      properties:
        id:
          type: integer
          example: 12
        goal_category:
          type: string
          example: bmi
        description:
          type: string
          example: Do more exercises
        user-id:
          type: integer
          example: 05
        createdat:
          type: date
          example: 2020-06-10 05:59:27 +0000
    Waterintake:
      type: object
      properties:
        id:
          type: integer
          example: 12
        weight:
          type: decimal
          example: 45.6
        waterconsumed:
          type: decimal
          example: 5.6
        dailyrequired:
          type: decimal
          example: 17.6
        user-id:
          type: integer
          example: 05
        createdat:
          type: date
          example: 2020-06-10 05:59:27 +0000
